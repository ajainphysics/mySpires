{"version":3,"sources":["../components.js"],"names":["mySpires_Box","record","where","undefined","page","$","attr","split","append","id","status","box","find","thumbnail","title","published","modified","dateBullet","authors","height","thumbHeight","arxiv","hover","toggle","toggleClass","titleLastWord","length","titleLink","inspire","utf8_decode","html","authorArray","author","surnameArray","map","a","arr","join","addClass","s","t","updated","modifiedDate","Date","publishedDate","today","daysPast","Math","floor","getTime","monthNames","monthNamesSmall","dayNames","getMonth","getFullYear","hasClass","todayDay","getDay","modifiedDay","getDate","bar","mySpires_Bar","busy","then","onupdate","remove","bind","hide","MathJax","Hub","Queue","subtagBox","loadSubtag","subtag","type","subtagParents","subtagName","subtagName_","replace","tagSmallClass","typeclass","$subtagBox","click","window","location","dotdotdot","wrap","watch","resize","x","width","y","z","strData","tmpArr","i","c1","seqlen","charCodeAt","ai","push","String","fromCharCode"],"mappings":"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","file":"components.js","sourcesContent":["/**\n * This class constructs relevant HTML elements for records.\n */\nclass mySpires_Box\n{\n    /**\n     * @param {mySpires_Record} record - The record to be loaded.\n     * @param {string} [where] - Location where the box should be loaded.\n     */\n    constructor(record, where) {\n        this.record = record;\n        if (where === undefined) where = \".paper-boxes\";\n\n        this.page = $(\"body\").attr(\"id\").split(\"page-\")[1];\n\n        // Let us first place the physical box, where results will be loaded.\n        $(where).append(\"<div id='record-\" + record.id + \"' class='col-md-4 col-lg-3 paper-box \" + record.status + \"'>\"\n            + \"<div class='paper-wrapper'></div></div>\");\n        this.box = $(\"#record-\" + record.id);\n\n        // Create DOM elements for the record.\n        this.box.find(\".paper-wrapper\").append(\n            \"<div class='img-wrapper'></div>\"\n            + \"<div class='title-wrapper'>\"\n            + \"<p class='paper-title' data-toggle='tooltip' data-placement='top' title='Title'></p>\"\n            + \"</div>\"\n            + \"<div class='author-wrapper'>\"\n            + \"<p class='paper-authors'></p>\"\n            + \"</div>\"\n            + \"<div class='date-wrapper'>\"\n            + \"<span class='published-date' data-toggle='tooltip' data-placement='top' title='Publication On'>\"\n            + \"</span>\"\n            + \"<span class='date-bullet'>&bull;</span>\"\n            + \"<span class='modified-date' data-toggle='tooltip' data-placement='top' title='Viewed On'></span> </div>\"\n            + \"<div class='mySpires-bar homeserver smallbar'></div>\"\n        );\n\n        // Save all the DOMs defined above as properties of the object, to be used later.\n\n        this.thumbnail =   this.box.find(\".img-wrapper\");\n        this.title =       this.box.find('.paper-title');\n        this.published =   this.box.find('.published-date');\n        this.modified =    this.box.find('.modified-date');\n        this.dateBullet =  this.box.find('.date-bullet');\n        this.authors =     this.box.find(\".paper-authors\");\n\n        /* ============================== Thumbnail ============================== */\n\n        // Make sure that the thumbnails dimensions are appropriate.\n        // $(\".img-wrapper\").height(1 / 1.618 * $(\".paper-box\").width()); // Set the thumbnail height\n        // console.log(1 / 1.618 * $(\".paper-box\").width());\n        this.thumbnail.height(thumbHeight());\n\n        // If arxiv record exists, display the corresponding pdf image as thumbnail.\n        if (record.arxiv) {\n            this.thumbnail.append(\n                \"<a href='https://arxiv.org/pdf/\" + record.arxiv + \".pdf' target='_blank'>\"\n                + \"<img src='thumbnails/\" + record.id + \".jpg' class='img-thumbnail img-fluid'></a>\"\n            );\n        }\n\n        // Set up hover animations for the thumbnail.\n        this.thumbnail.hover(function () {\n            $(this).find(\".edit-buttons\").toggle();\n            $(this).find(\"img\").toggleClass(\"lifted\", 500);\n        });\n\n        /* ============================== Title ============================== */\n\n        // Isolate the last word of the title.\n        let titleLastWord = record.title.split(\" \");\n        titleLastWord = titleLastWord[titleLastWord.length - 1];\n        // var remainingTitle = entry.title.slice(0, 0 - titleLastWord.length);\n\n        // Figure out the title link.\n        let titleLink = \"\";\n        if (record.inspire) titleLink = \"href = 'http://inspirehep.net/record/\" + record.inspire + \"'\";\n\n        // Display the title\n        this.title.attr(\"title\", utf8_decode(record.title))\n            .html(\"<a \" + titleLink + \" target='_blank'>\" + utf8_decode(record.title) + \"</a>\"\n                + \"\");\n// <span class='title-last-word'><a \" + titleLink + \" target='_blank'>\" + titleLastWord + \"</a></span>\n        // Setup ellipsis for long titles. TODO: This is too resource consuming.\n        // this.title.parent().dotdotdot({wrap: 'letter', after: 'span.title-last-word'});\n\n        /* ============================== Authors ============================== */\n\n        // Convert the string of author names to a string of surnames and display it.\n        let authorArray = record.author.split(\", \"),\n            surnameArray = $.map(authorArray, function (a) {\n                let arr = a.split(\" \");\n                return arr[arr.length - 1];\n            });\n        this.authors.html(utf8_decode(surnameArray.join(\", \")));\n\n        // Setup ellipsis for too long author lists. TODO: This is too resource consuming.\n//        this.authors.parent().dotdotdot({ellipsis: ' et al. '});\n\n        // Add author surnames as classes to the box for use by filters.\n        this.box.addClass($.map(surnameArray, function (s) {\n            return \"author-\" + s\n        }).join(\" \"));\n\n        /* ============================== Date ============================== */\n\n        // Transform the modified and published dates from the record to a more useful format.\n        let t = record.updated.split(/[- :]/),\n            modifiedDate = new Date(t[0], t[1] - 1, t[2], t[3], t[4], t[5]),\n            publishedDate = new Date(record.published);\n\n        // Find out how much time has passed since the record was last modified.\n        let today = new Date(),\n            daysPast = Math.floor((today.getTime() - modifiedDate.getTime()) / (1000 * 60 * 60 * 24));\n\n        // Define month and week names to be used in a bit.\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n            \"October\", \"November\", \"December\"],\n            monthNamesSmall = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n            dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n        // Display published date in the format Jan 2017.\n        this.published.html(monthNamesSmall[publishedDate.getMonth()] + \" \" + publishedDate.getFullYear());\n\n        if(!$(where).hasClass(\"public\")) {\n            // Now the more tricky part: converting modified date into \"opened ...\" format.\n            // Let us first find what day of the week it was on the modified date and is today.\n            let todayDay = today.getDay();\n            if (todayDay === 0) todayDay = 7;\n            let modifiedDay = modifiedDate.getDay();\n            if (modifiedDay === 0) modifiedDay = 7;\n\n            // Now we just make some cases to get the desired format.\n            if (today.getDate() === modifiedDate.getDate() && daysPast === 0)\n                this.modified.html(\"opened today\");\n            else if (today.getDate() === modifiedDate.getDate() + 1 && daysPast <= 1)\n                this.modified.html(\"opened yesterday\");\n            else if (modifiedDay < todayDay && daysPast < 7)\n                this.modified.html(\"opened \" + dayNames[modifiedDate.getDay()]);\n            else if (modifiedDate.getMonth() === today.getMonth() && daysPast < 100)\n                this.modified.html(\"opened \" + modifiedDate.getDate() + \" \"\n                    + monthNames[modifiedDate.getMonth()]);\n            else if (modifiedDate.getFullYear() === today.getFullYear())\n                this.modified.html(\"opened in \" + monthNames[modifiedDate.getMonth()]);\n            else\n                this.modified.html(\"opened in \" + monthNamesSmall[modifiedDate.getMonth()] + \" \"\n                    + modifiedDate.getFullYear());\n\n            let bar = new mySpires_Bar(record, this.box);\n            if (this.page === \"library\") {\n                bar.record.busy.then(function () {\n                    bar.onupdate = function () {\n                        if (this.record.status === \"unsaved\") this.box.remove();\n                    };\n                }.bind(this));\n\n            }\n        } else {\n            this.dateBullet.hide();\n        }\n\n        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, \"record-\" + record.id]);\n    }\n}\n\nconst subtagBox = {\n    loadSubtag: function (subtag, type) {\n        let subtagParents = subtag.split(\"/\");\n        let subtagName = subtagParents[subtagParents.length - 1];\n        let subtagName_ = subtagName.replace(/ /g, \"_\");\n        let tagSmallClass = \"\";\n\n        if(subtagName.length > 20) tagSmallClass = \"tag-name-small\";\n\n        let typeclass = \"\";\n        if(type) typeclass = \"subtag-\" + type;\n\t\n        $(\".subtags\").append(\"<div id='subtag-\" + subtagName_ + \"' \" +\n            \"class='col-sm-6 col-md-4 col-lg-3 col-xl-2 subtag \" + typeclass + \"'>\"\n            + \"<div class='subtag-wrapper'>\"\n            + \"<div class='tag-icon'><i class='fa fa-tag'></i></div>\"\n            + \"<div class='tag-name \" + tagSmallClass + \"'><p>\"\n            + subtagName\n            + \"</p></div></div></div>\");\n\n        let $subtagBox = $(\"#subtag-\" + subtagName_);\n\n        $subtagBox.click(function() {\n            window.location = \"?tag=\" + subtag;\n        });\n\n\n        $subtagBox.find(\".tag-name\").dotdotdot({wrap: 'letter', watch: true}); // \"watch: true\" is too time consuming\n    }\n};\n\n// Whenever the window is resized, fix the aspect ratio of thumbnails.\n$(window).resize(function () {\n    $(\".paper-box .img-wrapper\").height(thumbHeight());\n});\n\nfunction thumbHeight() {\n    let x = $(\"body\").width();\n    let y = $(\".paper-boxes\").width();\n    let z;\n\n    if(x < 768) z = y;\n    else if(x < 992) z = y/3;\n    else z = y/4;\n\n    return z / 2\n}\n\nfunction utf8_decode (strData) {\n    let tmpArr = [];\n    let i = 0;\n    let c1 = 0;\n    let seqlen = 0;\n\n    strData += '';\n\n    while (i < strData.length) {\n        c1 = strData.charCodeAt(i) & 0xFF;\n        seqlen = 0;\n\n        // http://en.wikipedia.org/wiki/UTF-8#Codepage_layout\n        if (c1 <= 0xBF) {\n            c1 = (c1 & 0x7F);\n            seqlen = 1\n        } else if (c1 <= 0xDF) {\n            c1 = (c1 & 0x1F);\n            seqlen = 2\n        } else if (c1 <= 0xEF) {\n            c1 = (c1 & 0x0F);\n            seqlen = 3\n        } else {\n            c1 = (c1 & 0x07);\n            seqlen = 4\n        }\n\n        for (let ai = 1; ai < seqlen; ++ai) {\n            c1 = ((c1 << 0x06) | (strData.charCodeAt(ai + i) & 0x3F))\n        }\n\n        if (seqlen === 4) {\n            c1 -= 0x10000;\n            tmpArr.push(String.fromCharCode(0xD800 | ((c1 >> 10) & 0x3FF)));\n            tmpArr.push(String.fromCharCode(0xDC00 | (c1 & 0x3FF)));\n        } else {\n            tmpArr.push(String.fromCharCode(c1));\n        }\n\n        i += seqlen;\n    }\n\n    return tmpArr.join('');\n}"]}