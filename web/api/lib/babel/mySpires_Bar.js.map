{"version":3,"sources":["../mySpires_Bar.js"],"names":["mySpires_Bar","record","box","mySpires_Record","$","bar","find","append","tags","comments","editButton","saveButton","removeButton","form","formButtons","formInput","submitButton","cancelButton","newTags","newComments","mySpires","prepare","then","Awesomplete","get","list","taglist","bind","on","e","mode","keyCode","addTags","val","shiftKey","preventDefault","submit","busy","trim","html","save","click","remove","hasClass","refreshValues","onupdate","removeClass","index","className","match","join","addClass","editMode","status","viewMode","fadeIn","is","fadeOut","slideUp","slideDown","focus","originalTags","originalComments","hide","tag","tagArray","map","split","inArray","tag_","replace","jQuery","grep","value","children","length","tagArr","n","removeTag","tagExists","push","tagLink","tagParents","tagLevel","tagName","tagBars","i","css","off","window","location","each","tooltip","container"],"mappings":"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","file":"mySpires_Bar.js","sourcesContent":["/**\n * Once a record has been obtained, this class designs the mySpires-bar and loads tags and comments into it.\n * It also associates required javascript functions to various DOM elements of the bar.\n * This class assumes that there is a \"box\" corresponding to the entire record on the page, location of which you will\n *  pass during the construction, and that the box contains an div with class .mySpires-bar.\n */\nclass mySpires_Bar {\n    /**\n     * @param {mySpires_Record|Object} record - The record to be loaded, can either be a processed mySpires_Record or a\n     *                                          raw JSON object returned by the API.\n     * @param {Object} [box] - jQuery location of the element corresponding to the record. Make sure that it contains a\n     *                       div with class \".mySpires-bar\" where the bar will be loaded.\n     */\n    constructor(record, box) {\n        if (!record) this.record = new mySpires_Record();\n        else if(record instanceof mySpires_Record) this.record = record;\n        else this.record = new mySpires_Record(record);\n\n        if(!box) box = $(\"body\");\n\n        this.box = box;\n        this.bar = box.find(\".mySpires-bar\");\n\n        this.bar.append(\n            \"<form class='mySpires-form'>\" +\n            \"    <div class='toolbar'>\" +\n            \"        <div class='tooltitle'>mySpires.</div> \" +\n            \"        <div class='tags-wrapper'></div>\" +\n            \"        <button type='button' class='save-button btn btn-sm btn-outline-success'>Save</button>\" +\n            \"        <div class='rot-dots edit-button'>\" +\n            \"            <div class='rot-dots-wrapper'>\" +\n            \"                <div class='ball'></div>\" +\n            \"                <div class='ball'></div>\" +\n            \"                <div class='ball'></div>\" +\n            \"            </div>\" +\n            \"        </div>\" +\n            \"    </div>\" +\n            \"    <p class='paper-comments'></p>\" +\n            \"    <div class='form-input'>\" +\n            \"        <input class='tags-input form-control' name='tags' placeholder='Add a Tag...'>\" +\n            \"        <textarea name='comments' placeholder='Comments' rows='2' class='comments-input form-control'></textarea>\" +\n            \"        <div class='form-buttons'>\" +\n            \"            <button class='submit-button btn btn-outline-success btn-sm'>Save</button>\" +\n            \"            <button type='reset' class='cancel-button btn btn-outline-warning btn-sm'>Cancel</button>\" +\n            \"            <button type='button' class='remove-button btn btn-sm btn-outline-danger'>Remove</button>\" +\n            \"        </div>\" +\n            \"    </div>\" +\n            \"</form>\"\n        );\n\n        this.tags = this.bar.find(\".tags-wrapper\");\n        this.comments = this.bar.find(\".paper-comments\");\n\n        this.editButton = this.bar.find(\".edit-button\");\n        this.saveButton = this.bar.find(\".save-button\");\n        // this.deleteButton = this.bar.find(\".delete-button\");\n        this.removeButton = this.bar.find(\".remove-button\");\n\n        this.form = this.bar.find(\".mySpires-form\");\n        this.formButtons = this.bar.find(\".form-buttons\");\n        this.formInput = this.bar.find(\".form-input\");\n\n        this.submitButton = this.bar.find(\".submit-button\");\n        this.cancelButton = this.bar.find(\".cancel-button\");\n        this.newTags = this.bar.find(\".tags-input\");\n        this.newComments = this.bar.find(\".comments-input\");\n\n\n        /* ============================== Edit Form ============================== */\n\n        // This provides an auto-completion library for tags.\n        mySpires.prepare().then(function() {\n            // this.newTags.autocomplete({source: entryTags});\n            (new Awesomplete(this.newTags.get(0))).list = mySpires.taglist; // This one is using Awesomplete\n        }.bind(this));\n\n        // This nice function adds the tag every time comma is pressed in newTags field.\n        // You will still need to explicitly save though, the adding is only temporary.\n        this.newTags.on(\"keyup\", function (e) {\n            if(this.mode !== \"edit\") return; // The following should only be done in edit mode.\n            if (e.keyCode === 188) { // KeyCode For comma is 188\n                this.addTags(this.newTags.val()).newTags.val(\"\");\n            }\n        }.bind(this));\n\n        this.newComments.on(\"keypress\", function (e) {\n            if(this.mode !== \"edit\") return; // The following should only be done in edit mode.\n            if (e.keyCode === 13 && !e.shiftKey) {\n                e.preventDefault();\n                this.form.submit();\n            }\n        }.bind(this));\n\n        // On submitting the edit form, the record will be updated to new values.\n        // Tags and comments fields will be updated, and viewMode will be turned on.\n        this.form.submit(function (e) {\n            e.preventDefault();\n            this.record.busy.then(function () {\n                this.addTags(this.newTags.val()).newTags.val(\"\"); // Add residual tags and reset input.\n                this.record.comments = this.newComments.val().trim(); // Add comments\n                this.comments.html(this.record.comments); // Reset comments input\n                this.save(); // Save and turn on the view mode.\n            }.bind(this));\n        }.bind(this));\n\n        // ============================== Editing Buttons ============================== //\n\n        this.saveButton.click(function (e) {\n            e.preventDefault();\n            this.save();\n        }.bind(this));\n\n        this.removeButton.click(function (e) {\n            e.preventDefault();\n            this.remove();\n        }.bind(this));\n\n        this.editButton.click(function (e) {\n            e.preventDefault();\n            if(!this.editButton.hasClass(\"busy\")) {\n                this.mode = \"edit\";\n                this.refreshValues();\n            }\n        }.bind(this));\n\n        this.onupdate = false;\n\n        this.refreshValues();\n\n    }\n\n    /* ============================== Display Modes ============================== //\n    //\n    // The following methods toggle edit and view modes.\n    */\n\n    /**\n     * Sets the DOM valus to record values.\n     * @param {mySpires_Record|Object} [record] If record is passed, the old record will be replaced before refresh.\n     *                                          If record is not mySpires_Record, raw mySpires_Record will be assumed.\n     */\n    refreshValues(record) {\n        if (record) {\n            if(record instanceof mySpires_Record) this.record = record;\n            else this.record = new mySpires_Record(record);\n        }\n\n        this.record.busy.then(function () {\n            if(!this.mode) this.mode = \"view\"; // If mode is not set, \"view\" will be assumed.\n\n            // Backup the original tags.\n            let tags = this.record.tags;\n            if(tags) tags = tags.trim();\n            else tags = \"\";\n\n            // Start afresh - remove all the tags from the record, tags-wrapper and the classes in box.\n            this.record.tags = \"\";\n            this.tags.html(\"\");\n            this.box.removeClass(function (index, className) {\n                return (className.match(/(^|\\s)tag-\\S+/g) || []).join(' ');\n            });\n\n            // Now add all the backed-up tags.\n            if(tags === \"\") this.addTags(\"Untagged\");\n            else this.addTags(tags);\n\n            // Reset the comments\n            this.comments.html(this.record.comments);\n            this.newComments.html(this.record.comments);\n\n            // Set classes in box and set the mode.\n            if(this.mode === \"edit\") {\n                this.box.addClass(\"saved\").removeClass(\"unsaved\");\n                this.editMode();\n            } else if (this.record.status === \"saved\") {\n                this.box.addClass(\"saved\").removeClass(\"unsaved\");\n                this.viewMode();\n            } else {\n                this.box.addClass(\"unsaved\").removeClass(\"saved\");\n                this.viewMode();\n            }\n\n            this.bar.fadeIn(\"fast\");\n        }.bind(this));\n    }\n\n    /**\n     * Activates the editMode of the box.\n     * @return {mySpires_Bar} Returns for chaining.\n     */\n    editMode() {\n        if(this.editButton.is(\":visible\")) this.editButton.fadeOut();\n        if(this.comments.is(\":visible\")) this.comments.slideUp();\n\n        if(this.formInput.is(\":hidden\")) {\n            this.formInput.slideDown(function () {\n                this.newTags.focus();\n            }.bind(this));\n        }\n\n        let originalTags = this.record.tags,\n            originalComments = this.record.comments;\n        this.cancelButton.click(function () {\n            this.mode = \"view\";\n            this.record.tags = originalTags;\n            this.record.comments = originalComments;\n            this.refreshValues();\n        }.bind(this));\n\n        return this;\n    }\n\n    /**\n     * Activates the viewMode of the box.\n     * It is an internal function, only called by .refreshValues();\n     * @return {mySpires_Bar} Returns for chaining.\n     */\n    viewMode() {\n        this.tags.find(\".delete-tag\").hide();\n\n        if(this.formInput.is(\":visible\")) this.formInput.slideUp();\n\n        if(this.record.status === \"saved\") {\n            if(this.editButton.is(\":hidden\")) this.editButton.fadeIn();\n        } else {\n            if(this.editButton.is(\":visible\")) this.editButton.fadeOut();\n        }\n\n        if(this.comments.is(\":hidden\")) this.comments.slideDown();\n\n        // if (!this.record.tags.trim() && this.record.status === \"saved\") this.addTags(\"Untagged\");\n\n        return this;\n    }\n\n    /* ============================== Action Methods ============================== //\n    //\n    // The following methods deal with permanent actions such as save, delete, edit etc.\n    */\n\n    /**\n     * Tells the API to save a record.\n     * @returns {mySpires_Bar} Returns for chaining.\n     */\n    save() {\n        this.record.busy.then(function() {\n            this.record.status = \"saved\";\n\n            this.editButton.addClass(\"busy\");\n\n            this.mode = \"view\";\n            this.refreshValues(); // Refresh the values.\n\n            this.record.save().busy.then(function () {\n                if (this.onupdate) this.onupdate();\n                this.refreshValues(); // Refresh the values.\n                this.editButton.removeClass(\"busy\");\n            }.bind(this));\n        }.bind(this));\n        return this;\n    }\n\n    /**\n     * Tells the API to remove the record, but keeps the box.\n     * @returns {mySpires_Bar} Returns for chaining.\n     */\n    remove() {\n        this.editButton.addClass(\"busy\");\n\n        this.mode = \"view\";\n        this.refreshValues(); // Refresh the values.\n\n        this.record.remove().busy.then(function () {\n            if (this.onupdate) this.onupdate();\n            this.refreshValues(); // Refresh the values.\n            this.editButton.removeClass(\"busy\");\n        }.bind(this));\n        return this;\n    }\n\n    /* ============================== DOM content Methods ============================== //\n    //\n    // The following methods deal with temporary manipulations.\n    */\n\n    /**\n     * Checks if a tag exists in the record.\n     * @param {string} tag The tag to test.\n     * @returns {boolean} Returns true if tag exists, false otherwise.\n     */\n    tagExists(tag) {\n        tag = tag.trim();\n        let tagArray = $.map(this.record.tags.split(\",\"), $.trim);\n        return ($.inArray(tag, tagArray) !== -1);\n    }\n\n    /**\n     * Removes a tag from the record.\n     * Note that this does not save the record in the database. That needs to be done explicitly later.\n     * @param {string} tag The tag to remove.\n     * @returns {mySpires_Bar} Returns for chaining.\n     */\n    removeTag(tag) {\n        tag = tag.trim();\n        let tag_ = tag.replace(/ /g, \"_\").replace(/\\//g, \"__\");\n\n        // Go through the current tags and remove if match found.\n        let tagArray = $.map(this.record.tags.split(\",\"), $.trim);\n        tagArray = jQuery.grep(tagArray, function (value) {\n            return value !== tag;\n        });\n        this.record.tags = tagArray.join(\", \");\n\n        this.box.removeClass(\"tag-\" + tag_);\n        this.tags.children(\".paper-tag-\" + tag_).remove();\n\n        if(tagArray.length === 0) this.addTags(\"Untagged\");\n\n        return this;\n    }\n\n    /**\n     * Adds a tag to the record.\n     * Note that this does not save the record in the database. That needs to be done explicitly later.\n     * @param {string|Array} tags - The tag to add.\n     * @returns {mySpires_Bar} Returns for chaining\n     */\n    addTags(tags) {\n        let tagArr;\n        if(typeof(tags) === \"string\") tagArr = tags.split(\",\");\n        else tagArr = tags;\n\n        // Purify the tagArr\n        tagArr = $.grep($.map(tagArr, $.trim), function (n) {\n            return n !== \"\"\n        });\n\n        if(tagArr.length !== 0) this.removeTag(\"Untagged\");\n\n        $.map(tagArr, function (tag) {\n            tag = tag.replace(/,\\s*$/, \"\").trim();\n            let tag_ = tag.replace(/ /g, \"_\").replace(/\\//g, \"__\");\n\n            if (tag && !this.tagExists(tag)) {\n                if (tag !== \"Untagged\") {\n                    let tagArray = $.map(this.record.tags.split(\",\"), $.trim);\n                    tagArray.push(tag);\n                    tagArray = $.grep(tagArray, function (n) {\n                        return n !== \"\"\n                    });\n                    this.record.tags = tagArray.join(\", \");\n                }\n\n                let tagLink = \"library.php?tag=\" + tag,\n                    tagParents = tag.split(\"/\"),\n                    tagLevel = tagParents.length - 1,\n                    // tagName = tag.substr(tag.lastIndexOf(\"/\") + 1);\n                    tagName = tagParents[tagLevel];\n                // if(tag === \"Untagged\") tagLink = \"library.php\";\n\n                let tagBars = \"\";\n                for(let i = 1; i <= tagLevel; i++) {\n                    tagBars += \"<span>&nbsp;</span>\";\n                }\n\n                this.box.addClass(\"tag-\" + tag_);\n\n                if (tag === \"Untagged\") {\n                    this.tags.append(\n                        \"<button type='button' class='btn btn-sm btn-outline-secondary paper-tag paper-tag-Untagged' title='Untagged' >Untagged</button> \");\n                } else {\n                    this.tags.append(\n                        \"<button type='button' \" +\n                        \"  class='btn btn-sm btn-outline-dark paper-tag paper-tag-\" + tag_ + \"' \" +\n                        \"  data-toggle='tooltip' data-placement='bottom' title='\" + tag + \"' >\" +\n                        \"<span class='tag-level-bars'>\" + tagBars + \"</span>\" +\n                        tagName +\n                        \" <i class='fa fa-times delete-tag'></i></button> \");\n\n                    if(this.mode === \"edit\") {\n                        this.tags.find(\".delete-tag\").css(\"display\", \"inline-block\");\n                        this.tags.find(\".paper-tag-\" + tag_).off(\"click\").on(\"click\", function (e) {\n                            e.preventDefault();\n                            this.removeTag(tag);\n                        }.bind(this))\n                    } else {\n                        this.tags.find(\".paper-tag-\" + tag_).off(\"click\").on(\"click\", function (e) {\n                            e.preventDefault();\n                            window.location = tagLink;\n                        })\n                    }\n                }\n            }\n\n        }.bind(this));\n\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').each(function() {\n                $(this).tooltip({\n                    container: $(this)\n                });\n            })\n        });\n\n        return this;\n    }\n}"]}